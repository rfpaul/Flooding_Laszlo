/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #98ff00 */ee.Geometry.Polygon(
        [[[-82.1337890625, 42.61132393345391],
          [-82.4853515625, 44.144375156142864],
          [-86.396484375, 45.299621281112216],
          [-87.802734375, 45.39227876798964],
          [-89.912109375, 45.48478459387111],
          [-91.93359375, 46.03663519715222],
          [-95.44921875, 47.09406201244411],
          [-95.2734375, 48.27734442028102],
          [-96.15234375, 49.290740050243485],
          [-100.37109375, 49.290740050243485],
          [-100.458984375, 48.30658277685742],
          [-100.5908203125, 46.854181436320886],
          [-100.458984375, 45.26870174864029],
          [-100.4150390625, 43.57402423617491],
          [-99.3603515625, 42.02644643428589],
          [-100.37109375, 40.573909721497564],
          [-99.1845703125, 39.90299481572232],
          [-95.8447265625, 39.22544552735803],
          [-94.04296874999994, 38.023863033250294],
          [-92.7685546875, 38.05847296216953],
          [-90.8349609375, 37.64207544142983],
          [-87.7587890625, 37.15331243359517],
          [-86.2646484375, 37.64207544142983],
          [-84.7705078125, 38.05847296216953],
          [-82.529296875, 38.747229512898734],
          [-81.298828125, 41.304222339667696]]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// SimpleCloudScore, an example of computing a cloud-free composite with L8
// by selecting the least-cloudy pixel from the collection.

// A mapping from a common name to the sensor-specific bands.
var LC8_BANDS = ['B2',   'B3',    'B4',  'B5',  'B6',    'B7',    'B10'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'temp'];
var corn_belt_region = /* color: #98ff00 */geometry;

// Compute a cloud score.  This expects the input image to have the common
// band names: ["red", "blue", etc], so it can work across sensors.
var cloudScore = function(img) {
  // A helper to apply an expression and linearly rescale the output.
  var rescale = function(img, exp, thresholds) {
    return img.expression(exp, {img: img})
        .subtract(thresholds[0]).divide(thresholds[1] - thresholds[0]);
  };

  // Compute several indicators of cloudyness and take the minimum of them.
  var score = ee.Image(1.0);
  // Clouds are reasonably bright in the blue band.
  score = score.min(rescale(img, 'img.blue', [0.1, 0.3]));

  // Clouds are reasonably bright in all visible bands.
  score = score.min(rescale(img, 'img.red + img.green + img.blue', [0.2, 0.8]));

  // Clouds are reasonably bright in all infrared bands.
  score = score.min(
      rescale(img, 'img.nir + img.swir1 + img.swir2', [0.3, 0.8]));

  // Clouds are reasonably cool in temperature.
  score = score.min(rescale(img, 'img.temp', [300, 290]));

  // However, clouds are not snow.
  var ndsi = img.normalizedDifference(['green', 'swir1']);
  return score.min(rescale(ndsi, 'img', [0.8, 0.6]));
};

// Filter the TOA collection to a time-range and add the cloudscore band.
var collection = ee.ImageCollection('LC8_L1T_TOA')
    .filterDate('2013-07-10', '2013-09-30')
    .map(function(img) {
      // Invert the cloudscore so 1 is least cloudy, and rename the band.
      var score = cloudScore(img.select(LC8_BANDS, STD_NAMES));
      score = ee.Image(1).subtract(score).select([0], ['cloudscore']);
      return img.addBands(score);
    });

// Load Cropland Data Layer from 2014
var cdl = ee.Image("USDA/NASS/CDL/2014");
var cdl_cult = cdl.select('cultivated_land');
cdl_cult = cdl_cult.remap([1, 2], [0, 1]);

// Define visualization parameters for a false color image.
var vizParams = {'bands': ['B6', 'B5', 'B7'], 'max': .8, 'gamma': 1.6};
var masked_lsat = collection.qualityMosaic('cloudscore').updateMask(cdl_cult);
masked_lsat = masked_lsat.clip(corn_belt_region);
Map.setCenter(-94.866,42.967, 8);
Map.addLayer(masked_lsat, vizParams);

