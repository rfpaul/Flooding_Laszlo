/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var geometry = /* color: #98ff00 */ee.Geometry.Polygon(
        [[[-82.1337890625, 42.61132393345391],
          [-82.4853515625, 44.144375156142864],
          [-86.396484375, 45.299621281112216],
          [-87.802734375, 45.39227876798964],
          [-89.912109375, 45.48478459387111],
          [-91.93359375, 46.03663519715222],
          [-95.44921875, 47.09406201244411],
          [-95.2734375, 48.27734442028102],
          [-96.15234375, 49.290740050243485],
          [-100.37109375, 49.290740050243485],
          [-100.458984375, 48.30658277685742],
          [-100.5908203125, 46.854181436320886],
          [-100.458984375, 45.26870174864029],
          [-100.4150390625, 43.57402423617491],
          [-99.3603515625, 42.02644643428589],
          [-100.37109375, 40.573909721497564],
          [-99.1845703125, 39.90299481572232],
          [-95.8447265625, 39.22544552735803],
          [-94.04296874999994, 38.023863033250294],
          [-92.7685546875, 38.05847296216953],
          [-90.8349609375, 37.64207544142983],
          [-87.7587890625, 37.15331243359517],
          [-86.2646484375, 37.64207544142983],
          [-84.7705078125, 38.05847296216953],
          [-82.529296875, 38.747229512898734],
          [-81.298828125, 41.304222339667696]]]),
    Vegetation = /* color: #35c61d */ee.Geometry.MultiPoint(
        [[-89.60638046264648, 41.711085276813],
         [-89.63865280151367, 41.69468038830335],
         [-89.62337493896484, 41.74823712039013],
         [-94.12673950195312, 42.73659868766111],
         [-94.17085647583008, 42.72071031267995],
         [-94.20544624328613, 42.71339524841851],
         [-94.04597282409668, 42.813272160521805],
         [-96.47137641906738, 47.764933883429386],
         [-96.66715621948242, 47.90078497256453],
         [-97.93770790100098, 48.953327949571296],
         [-97.90492057800293, 48.96031644050045],
         [-99.11521911621094, 48.25026067086706],
         [-99.64771270751953, 48.16846683639013],
         [-99.7943115234375, 48.230939378910755],
         [-88.00297737121582, 37.902070623652016],
         [-88.00666809082031, 37.92048971513834],
         [-88.24047088623047, 37.892385207779405],
         [-88.19343566894531, 37.894078554227505],
         [-88.16390991210938, 37.895297739552],
         [-88.18442344665527, 37.90518594105217],
         [-88.17996025085449, 37.91006182526012],
         [-88.20734024047852, 37.91629165153156],
         [-88.09593200683594, 37.85029643183005],
         [-88.20356369018555, 37.866424722972056],
         [-88.18502426147461, 37.81938531124216],
         [-88.42599391937256, 37.76582285087701],
         [-88.37372303009033, 37.75747671727692],
         [-88.4445333480835, 37.759885657391514],
         [-88.45487594604492, 37.762905203919786],
         [-87.92349815368652, 37.73161129703045],
         [-87.9415225982666, 37.721903493074564],
         [-87.76960372924805, 37.78576154825086],
         [-87.77518272399902, 37.77029409275776],
         [-83.84765625, 41.781399428696645],
         [-83.8751220703125, 41.777047057463186],
         [-83.8802719116211, 41.87937748771663],
         [-83.89297485351562, 41.86697863757837],
         [-83.90310287475586, 41.85828522614212],
         [-83.95099639892578, 41.84613803994648],
         [-83.88739585876465, 42.119349951270344],
         [-83.64260673522949, 42.12208745003631],
         [-96.01201057434082, 44.93088912078587],
         [-96.09234809875488, 44.93732980980953],
         [-96.9601821899414, 44.830905201449774],
         [-96.95159912109375, 44.828409464557524],
         [-96.89005851745605, 44.82755723696567],
         [-97.64287948608398, 44.95481323318252],
         [-97.63051986694336, 44.93233528877299],
         [-97.61009216308594, 44.921032241151295],
         [-97.57962226867676, 44.80868325464579],
         [-97.66965866088867, 44.74982989971508],
         [-87.71055221557617, 41.039846871821815],
         [-87.82865524291992, 41.03026494070838]]),
    Mixed_Soil_Vegetation = /* color: #00ffff */ee.Geometry.MultiPoint(
        [[-89.57835674285889, 41.72519910093124],
         [-89.571533203125, 41.72013821287914],
         [-94.09764289855957, 42.72134088129471],
         [-94.05567169189453, 42.759100252076784],
         [-94.07798767089844, 42.78556222290304],
         [-96.46159172058105, 47.773644818721785],
         [-96.47704124450684, 47.75772174046822],
         [-96.44391059875488, 47.75685621612306],
         [-97.92088508605957, 48.93974267858394],
         [-97.9636287689209, 48.954286107047864],
         [-99.53527450561523, 48.1888417037575],
         [-87.9744815826416, 37.91175476503617],
         [-88.19266319274902, 37.91100987633411],
         [-88.44916820526123, 37.76399085344261],
         [-88.42123031616211, 37.76938493820292],
         [-87.87311553955078, 37.730593055655355],
         [-87.78891563415527, 37.77504321722767],
         [-87.7778434753418, 37.787050356786764],
         [-87.75853157043457, 37.7898992222141],
         [-83.83855819702148, 41.869918788650864],
         [-83.87486457824707, 42.12692561672709],
         [-83.75435829162598, 42.100183930851074],
         [-96.88817024230957, 44.830844331104025],
         [-96.86997413635254, 44.82560924086893],
         [-97.66244888305664, 44.94120601537627],
         [-97.5391960144043, 44.951776187433424],
         [-97.59103775024414, 44.95809306206999],
         [-97.59721755981445, 44.80722178544886],
         [-97.61009216308594, 44.81562472764967],
         [-97.69918441772461, 44.74489226261573],
         [-87.77166366577148, 41.03932896525695]]),
    Soil = /* color: #e18b1d */ee.Geometry.MultiPoint(
        [[-89.59556579589844, 41.747084455263604],
         [-89.64534759521484, 41.74452290311045],
         [-89.64706420898438, 41.725308004473],
         [-89.5993423461914, 41.703959916983564],
         [-96.46957397460938, 41.51832064078248],
         [-94.1696548461914, 42.71415201919271],
         [-94.15969848632812, 42.7123862063648],
         [-94.08536911010742, 42.714845717629125],
         [-94.10322189331055, 42.72493500002785],
         [-94.12073135375977, 42.72146699424862],
         [-94.05086517333984, 42.7122600749546],
         [-94.0652847290039, 42.722854219823326],
         [-94.03301239013672, 42.72714181186145],
         [-96.3859748840332, 47.792157919888155],
         [-96.56381607055664, 47.89572100200517],
         [-96.65822982788086, 47.917009359700174],
         [-97.93581962585449, 48.944083602922476],
         [-97.9570198059082, 48.944139976079704],
         [-99.0582275390625, 48.27403070491016],
         [-99.00054931640625, 48.27163134734859],
         [-99.09650802612305, 48.236885169085866],
         [-99.45287704467773, 48.17751061402051],
         [-88.14176559448242, 37.891911063794076],
         [-88.16322326660156, 37.84704323960963],
         [-88.18107604980469, 37.836198228978986],
         [-88.00031661987305, 37.843789903861925],
         [-88.38985919952393, 37.75991958556531],
         [-88.40307712554932, 37.75944458971607],
         [-87.89989471435547, 37.72482275672393],
         [-87.84350395202637, 37.73520897108256],
         [-87.75715827941895, 37.78223416785171],
         [-87.74316787719727, 37.77422910326853],
         [-87.71956443786621, 37.77368635564874],
         [-83.81006240844727, 41.83846494434363],
         [-83.87932777404785, 42.11947728086267],
         [-83.81804466247559, 42.116930640403794],
         [-83.78474235534668, 42.09521637550994],
         [-83.66595268249512, 42.1227240679352],
         [-95.98523139953613, 44.94024611062601],
         [-95.95467567443848, 44.93344117831181],
         [-96.07921600341797, 44.94443803355021],
         [-96.95116996765137, 44.83486163602882],
         [-97.64596939086914, 44.93221376245555],
         [-97.7153205871582, 44.93513032309996],
         [-97.55189895629883, 44.94545861745458],
         [-97.68613815307617, 44.91629159152808],
         [-97.56434440612793, 44.81197142495047],
         [-97.6164436340332, 44.81197142495047],
         [-87.68274307250977, 41.05227540679247],
         [-87.80101776123047, 41.0605597926365]]),
    Water = /* color: #2b3fa7 */ee.Geometry.MultiPoint(
        [[-96.4420223236084, 47.766087733518205],
         [-97.94556140899658, 48.95127629518399],
         [-99.00964736938477, 48.363298007093434],
         [-99.04157638549805, 48.33180973628732],
         [-99.13032531738281, 48.25700425545257],
         [-99.0311050415039, 48.260432855682005],
         [-99.20173645019531, 48.21195396374218],
         [-99.19195175170898, 48.206234085310946],
         [-99.47004318237305, 48.18804059788656],
         [-88.03215980529785, 37.91040041633182],
         [-88.39822769165039, 37.75832494457492],
         [-88.42745304107666, 37.768672534464],
         [-96.93280220031738, 44.841921675158325],
         [-97.60614395141602, 44.92467862855471],
         [-97.66450881958008, 44.9562709580541],
         [-97.71841049194336, 44.917628737433574],
         [-97.53164291381836, 44.81184964420804],
         [-97.54743576049805, 44.819643093313225],
         [-97.61146545410156, 44.80381154665335],
         [-97.61009216308594, 44.73361336156256]]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// SimpleCloudScore, an example of computing a cloud-free composite with L8
// by selecting the least-cloudy pixel from the collection.

// A mapping from a common name to the sensor-specific bands.
var LC8_BANDS = ['B2',   'B3',    'B4',  'B5',  'B6',    'B7',    'B10'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'temp'];
var corn_belt_region = /* color: #98ff00 */geometry;

// Compute a cloud score.  This expects the input image to have the common
// band names: ["red", "blue", etc], so it can work across sensors.
var cloudScore = function(img) {
  // A helper to apply an expression and linearly rescale the output.
  var rescale = function(img, exp, thresholds) {
    return img.expression(exp, {img: img})
        .subtract(thresholds[0]).divide(thresholds[1] - thresholds[0]);
  };

  // Compute several indicators of cloudyness and take the minimum of them.
  var score = ee.Image(1.0);
  // Clouds are reasonably bright in the blue band.
  score = score.min(rescale(img, 'img.blue', [0.1, 0.3]));

  // Clouds are reasonably bright in all visible bands.
  score = score.min(rescale(img, 'img.red + img.green + img.blue', [0.2, 0.8]));

  // Clouds are reasonably bright in all infrared bands.
  score = score.min(
      rescale(img, 'img.nir + img.swir1 + img.swir2', [0.3, 0.8]));

  // Clouds are reasonably cool in temperature.
  score = score.min(rescale(img, 'img.temp', [300, 290]));

  // However, clouds are not snow.
  var ndsi = img.normalizedDifference(['green', 'swir1']);
  return score.min(rescale(ndsi, 'img', [0.8, 0.6]));
};

// Filter the TOA collection to a time-range and add the cloudscore band.
var collection = ee.ImageCollection('LC8_L1T_TOA')
    .filterDate('2013-07-10', '2013-09-30')
    .map(function(img) {
      // Invert the cloudscore so 1 is least cloudy, and rename the band.
      var score = cloudScore(img.select(LC8_BANDS, STD_NAMES));
      score = ee.Image(1).subtract(score).select([0], ['cloudscore']);
      return img.addBands(score);
    });

// Load Cropland Data Layer from 2014
var cdl = ee.Image("USDA/NASS/CDL/2014");
var cdl_cult = cdl.select('cultivated_land');
cdl_cult = cdl_cult.remap([1, 2], [0, 1]);

// Define visualization parameters for a false color image.
// NIR is green, SWIR1 is red, SWIR2 is blue
var vizParams = {'bands': ['B6', 'B5', 'B7'], 'max': .8, 'gamma': 1.6};

// Mask image
var masked_lsat = collection.qualityMosaic('cloudscore').updateMask(cdl_cult);
// Clip to the Corn Belt only
masked_lsat = masked_lsat.clip(corn_belt_region);

print(Vegetation);

// Merge classifier points
//merged_points = Vegetation.merge(Water).merge(Soil).merge(Mixed_Soil_Vegetation);
var sites = ee.FeatureCollection([Vegetation, Soil, Mixed_Soil_Vegetation, Water]);
print(sites);
var training = masked_lsat.sampleRegions(sites, ["class"], 30);
print(training);
var classifier = ee.Classifier.cart().train(training, "class");

Map.setCenter(-94.866,42.967, 8);
Map.addLayer(masked_lsat, vizParams);
//Map.addLayer(masked_lsat.classify(classifier)); //{min:0, max:3, palette: ["blue", "red", "yellow", "black"]})


