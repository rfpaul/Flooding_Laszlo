/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var champaign = ee.FeatureCollection("users/RobertFPaul/ChampaignCounty"),
    sinks = ee.Image("users/RobertFPaul/Champ_sinks_x10cm"),
    trainers = ee.FeatureCollection("users/RobertFPaul/unified_training_polys"),
    plImage = ee.Image("users/RobertFPaul/PL/2017-05-02_Combined"),
    waterCai = /* color: #999900 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.01400661468506, 39.97705432625988],
                  [-88.01366329193115, 39.97652814654308],
                  [-88.01289081573486, 39.97662680554857],
                  [-88.01336288452148, 39.97721875659055]]]),
            {
              "cover": 1,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.00516605377197, 39.974554936522644],
                  [-88.0050802230835, 39.97245011637222],
                  [-88.00435066223145, 39.97277899879355],
                  [-88.00435066223145, 39.974061625115716]]]),
            {
              "cover": 1,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.02679538726807, 39.97208834388093],
                  [-88.0268383026123, 39.9716607921043],
                  [-88.02546501159668, 39.97113457086164],
                  [-88.02576541900635, 39.97195678977298]]]),
            {
              "cover": 1,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.03653717041016, 39.976001962774895],
                  [-88.03632259368896, 39.97554154865434],
                  [-88.03576469421387, 39.9751797925265],
                  [-88.03572177886963, 39.97577175610235]]]),
            {
              "cover": 1,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0068826675415, 39.9582737800962],
                  [-88.00641059875488, 39.95768166498328],
                  [-88.0056381225586, 39.95774745580456]]]),
            {
              "cover": 1,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.99340724945068, 39.95606977009003],
                  [-87.99439430236816, 39.955642118129184],
                  [-87.99366474151611, 39.955642118129184]]]),
            {
              "cover": 1,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.00035953521729, 39.95547763589371],
                  [-88.0008316040039, 39.95488549657055],
                  [-87.9999303817749, 39.95534604982052]]]),
            {
              "cover": 1,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.99121856689453, 39.96255001479639],
                  [-87.99220561981201, 39.9618263631077],
                  [-87.99143314361572, 39.96120138503121],
                  [-87.99083232879639, 39.96202372341873]]]),
            {
              "cover": 1,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.96448230743408, 39.96419464924151],
                  [-87.96482563018799, 39.963043409283806],
                  [-87.96443939208984, 39.96261580093376],
                  [-87.96353816986084, 39.96412886462328]]]),
            {
              "cover": 1,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.96521186828613, 39.95176023187717],
                  [-87.96422481536865, 39.9509706687274],
                  [-87.9640531539917, 39.951299654480756]]]),
            {
              "cover": 1,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.9940938949585, 39.92777318528353],
                  [-87.99392223358154, 39.92741117642791],
                  [-87.99357891082764, 39.927740275466675]]]),
            {
              "cover": 1,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.00293445587158, 39.926456780268886],
                  [-88.00267696380615, 39.92599603253352],
                  [-88.00186157226562, 39.926456780268886]]]),
            {
              "cover": 1,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.06554794311523, 39.91803118876891],
                  [-88.06567668914795, 39.917142491724604],
                  [-88.06417465209961, 39.91658293581713]]]),
            {
              "cover": 1,
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.06571960449219, 39.913818004226215],
                  [-88.06486129760742, 39.91352175493528],
                  [-88.06447505950928, 39.913719254604935]]]),
            {
              "cover": 1,
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.08043956756592, 39.91799827426921],
                  [-88.07958126068115, 39.917339980953315],
                  [-88.07902336120605, 39.91727415127369]]]),
            {
              "cover": 1,
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.08078289031982, 39.92464668204215],
                  [-88.08207035064697, 39.9238568059999],
                  [-88.08026790618896, 39.92428465665397]]]),
            {
              "cover": 1,
              "system:index": "15"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0843448638916, 39.92250741334692],
                  [-88.0845594406128, 39.92168459989702],
                  [-88.0834436416626, 39.92237576385941]]]),
            {
              "cover": 1,
              "system:index": "16"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0319881439209, 39.94712141785606],
                  [-88.0319881439209, 39.947911025436746],
                  [-88.03327560424805, 39.9476478239225]]]),
            {
              "cover": 1,
              "system:index": "17"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.027503490448, 39.89795040562059],
                  [-88.02743911743164, 39.89753885261862],
                  [-88.02707433700562, 39.89781870892885]]]),
            {
              "cover": 1,
              "system:index": "18"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0305290222168, 39.89847718985659],
                  [-88.03091526031494, 39.89790101939083],
                  [-88.03055047988892, 39.897999791814726],
                  [-88.03020715713501, 39.8983290321995]]]),
            {
              "cover": 1,
              "system:index": "19"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.03280353546143, 39.89666635208064],
                  [-88.0324387550354, 39.896551115330105],
                  [-88.03207397460938, 39.89686390034505]]]),
            {
              "cover": 1,
              "system:index": "20"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.05260896682739, 39.898971046400185],
                  [-88.0523943901062, 39.89892166090598],
                  [-88.05215835571289, 39.89925089686174],
                  [-88.05280208587646, 39.89910274087739]]]),
            {
              "cover": 1,
              "system:index": "21"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.01828742027283, 39.891208856132145],
                  [-88.01828742027283, 39.89101952343604],
                  [-88.01804065704346, 39.89116769689487]]]),
            {
              "cover": 1,
              "system:index": "22"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.02479982376099, 39.891735692186536],
                  [-88.02443504333496, 39.891735692186536],
                  [-88.02467107772827, 39.891801546408644]]]),
            {
              "cover": 1,
              "system:index": "23"
            })]),
    othersCai = /* color: #009999 */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.06340217590332, 39.89011401200581],
                  [-88.0640459060669, 39.88563567053391],
                  [-88.06198596954346, 39.888401739516546]]]),
            {
              "cover": 0,
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.04160118103027, 39.88813830918363],
                  [-88.0394983291626, 39.88230965410924],
                  [-88.03812503814697, 39.88494413585031]]]),
            {
              "cover": 0,
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.06198596954346, 39.88273776428021],
                  [-88.05996894836426, 39.88069598405524],
                  [-88.0568790435791, 39.88148635780615]]]),
            {
              "cover": 0,
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.01568031311035, 39.89090427719106],
                  [-88.01194667816162, 39.8908713496569],
                  [-88.01224708557129, 39.89126647902281]]]),
            {
              "cover": 0,
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.00812721252441, 39.88573446063359],
                  [-88.00812721252441, 39.88178274561404],
                  [-88.00636768341064, 39.87977386983166],
                  [-88.00756931304932, 39.8827048328235]]]),
            {
              "cover": 0,
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.98293590545654, 39.897687011984054],
                  [-87.97770023345947, 39.89781870892885],
                  [-87.97847270965576, 39.89811502612931]]]),
            {
              "cover": 0,
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.96894550323486, 39.898641809099914],
                  [-87.96894550323486, 39.899399052525744],
                  [-87.9750394821167, 39.89930028211868]]]),
            {
              "cover": 0,
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.9810905456543, 39.90374480949799],
                  [-87.98074722290039, 39.902329176510136],
                  [-87.97572612762451, 39.90223041032649],
                  [-87.9773998260498, 39.90302053580942]]]),
            {
              "cover": 0,
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.96100616455078, 39.91329133793421],
                  [-87.95474052429199, 39.9070368661347],
                  [-87.95671463012695, 39.911480891668184]]]),
            {
              "cover": 0,
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.97645568847656, 39.917965359753715],
                  [-87.97611236572266, 39.91645127493918],
                  [-87.97516822814941, 39.91747164012272]]]),
            {
              "cover": 0,
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.93156623840332, 39.972244564055266],
                  [-87.93190956115723, 39.97119212650739],
                  [-87.93004274368286, 39.971973234050296],
                  [-87.93057918548584, 39.97284477508793]]]),
            {
              "cover": 0,
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.97718524932861, 40.287448306507336],
                  [-87.97628402709961, 40.28640073826633],
                  [-87.97561883926392, 40.286548053531256],
                  [-87.97630548477173, 40.287775668253055],
                  [-87.97677755355835, 40.28757925139588]]]),
            {
              "cover": 0,
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-87.97596216201782, 40.286024264463975],
                  [-87.97686338424683, 40.28486209297754],
                  [-87.97742128372192, 40.284878461728745],
                  [-87.97742128372192, 40.284682036452566],
                  [-87.97551155090332, 40.284682036452566],
                  [-87.97553300857544, 40.28553320852712]]]),
            {
              "cover": 0,
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0146074295044, 40.007730174396315],
                  [-88.01301956176758, 40.006744027105434],
                  [-88.01254749298096, 40.007598688913966]]]),
            {
              "cover": 0,
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.00701141357422, 39.99431735069529],
                  [-88.00898551940918, 39.99175283440082],
                  [-88.00259113311768, 39.99428447289062]]]),
            {
              "cover": 0,
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Polygon(
                [[[-88.0279541015625, 40.000991217319545],
                  [-88.021559715271, 39.99829544823896],
                  [-88.02001476287842, 39.99954472031328],
                  [-88.02743911743164, 40.00250343142571],
                  [-88.0290699005127, 40.001911699459804]]]),
            {
              "cover": 0,
              "system:index": "15"
            })]);
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Robert F Paul
// Classification of water cover in Planet Labs

var currentDate = '2017-05-02';

// Create a mask of all pixels matching CDL crop class indices
// for the specified years within the extent
var CDL_Mask = function(years, crops, extent) {
  var result_img;
  
  // Get the CDL image for the year
  var FetchCDLYear = function(year) {
    // Start and end dates
    var start = ee.Date.fromYMD(year, 01, 01);
    var end = ee.Date.fromYMD(year, 12, 31);
    // Get the cropland layer for the year
    var result = ee.ImageCollection('USDA/NASS/CDL')
      .filterDate(start,end)
      .select('cropland') // Get the cropland cover values
      .first(); // Specifically get the image
    // Clip to extent geometry
    result = ee.Image(result).clip(extent);
    //print(result)
    return FetchCovers(result);
  }
  
  // Specified land covers = 1, all others = 0
  var FetchCovers = function(image) {
    // Remap cover ID values as 1, everything else as 0
    var result = image.remap(crops, // from
      ee.List.repeat(1, crops.length), // to
      0); // default value
    return result;
  }  
  
  // Mask from the union of all specified crop types for specified years
  result_img = ee.ImageCollection(years.map(FetchCDLYear)).and();
  
  // Return resulting mask
  return result_img;
}

// Remove clouds and shadows, by taking the mean of all bands then
// dropping a buffered distance around a specified upper limit of "dark" pixels
// and dropping everything above an upper threshold
var Obscuration_Mask = function(image, cloud_thresh, shadow_thresh, bufferDist) {
  // print(image);
  // Get the mean of all bands
  var band_mean = image.reduce(ee.Reducer.mean());
  // Clouds are bright, get everything below a high value theshold
  var not_clouds = band_mean.lt(cloud_thresh).byte();
  
  /*Map.addLayer(cloud_mask,
    {min:2000, max: 9000, palette: ['black', 'red', 'orange', 'yellow']},
    "Mean values"); // */
  //Map.addLayer(not_clouds, {min: 0, max: 1}, "Not clouds");
  
  // For everything below this shadow value...  
  var shadow_mask = band_mean.lte(shadow_thresh).byte();

  // Measure the distance to the closest pixel below this threshold
  var cloud_mask = shadow_mask.fastDistanceTransform(100).sqrt().multiply(ee.Image.pixelArea().sqrt());
  
  //Map.addLayer(cloud_mask, {min:0, max: bufferDist}, "Buffered"); // Distance
  
  // Distance measurement to buffered mask around the shadows
  cloud_mask = cloud_mask
    .where(cloud_mask.lte(bufferDist), 0)
    .where(cloud_mask.gt(bufferDist), 1)
    .byte(); // */
  
  // Include the mask for the clouds too
  cloud_mask = cloud_mask.and(not_clouds).byte();
  
  return cloud_mask;
}

// Load Cropland Data Layer of maize and soybeans plots plus water cover in 2017
// Change champaign to clip region
var cdl_cult = CDL_Mask([2017], [1, 5, 111], champaign);
//print(cdl_cult);

// Define visualization parameters for a false color image.
// R is red, NIR is green, B is blue
var vizParams = {'bands': ['b1', 'b4', 'b3'], 'min':2000, 'max': 8000, 'gamma': 1.2};

// Mask image
var masked_pl = plImage.updateMask(cdl_cult);
// Clip to region of interest
masked_pl = masked_pl.clip(champaign);

// Mask of cloud shadow + buffer
var shade_mask = Obscuration_Mask(
  masked_pl, // image
  8000, // upper bound mean value to cut off clouds
  3500, // lower bound mean value to cut off cloud shadows
  150 // cloud shadow buffer distance
  );

// masked_pl = masked_pl.updateMask(shade_mask); // */

// Mask the area of interest where the shadows are
var aoi_mask = cdl_cult.and(shade_mask);
// Mask out 0 values of the original image, cast image as 8-bit int
aoi_mask = aoi_mask.and(plImage.gt(0)).byte();

masked_pl = masked_pl.updateMask(aoi_mask); // */

// Get the trainers associated with water vs not water cover for this date
var training_day = trainers.filter(ee.Filter.eq('date', currentDate)).select('class');
var training_bands = ['b1', 'b2', 'b3', 'b4']

print(training_day);

// Create the sampling raster with an added "class" band
var sample_pl = masked_pl.clipToCollection(training_day);
sample_pl = ee.Image([sample_pl, 
  ee.Image()
    .byte()
    .paint(training_day, 'class')
    .rename('class')]);
print(sample_pl);

// Sample pixels for classification
//var training = masked_pl.reduceRegions(training_day, ee.Reducer.mean());
/*var training = masked_pl.select(training_bands)
  .sample({region: training_day, numPixels: 50})
  .limit(50);
//  tileScale: 16});*/
var training = sample_pl.stratifiedSample({ numPoints: 50, // value overridden
  classBand: 'class', 
  region: training_day,
  scale: 6,
  classValues: [0, 1], // cover values to sample from 
  classPoints: [4500, 500] // sample
});
print(training);
// Train the classifier.
var classifier = ee.Classifier.randomForest({
  numberOfTrees: 30
})
  .train(training, "class", training_bands);
print(classifier);
// Apply the classifier to the masked Planet Labs image
var classed_pl = masked_pl.classify(classifier).byte();
// Recast classified image as 8-bit depth integer
//classed_pl = classed_pl.toInt8();

// Confusion matrix for classification
var trainAcc = classifier.confusionMatrix();
print('Confusion matrix: ', trainAcc.array());
print('Training overall accuracy: ', trainAcc.accuracy());
print('Consumers Accuracy', trainAcc.consumersAccuracy());
print('Producers Accuracy', trainAcc.producersAccuracy());
print('Kappa', trainAcc.kappa());
// */

// Draw to map
//Map.setCenter(-94.866,42.967, 8);
//Map.setCenter(-96.37, 48.29, 8);*/
//Map.addLayer(cdl_cult);
Map.addLayer(masked_pl, vizParams, "Planet Labs");
//Map.addLayer(shade_mask, {min: 0, max: 1}, "Cloud shadow mask")
//Map.addLayer(sample_pl, vizParams, "Sample Raster");
//Map.addLayer(training_day, {}, "Trainer Polys");
//Map.addLayer(sample_pl, {}, "Sample Points");
//Map.addLayer(training, {}, "Trainer Points")
Map.addLayer(classed_pl, {min: 0, max: 1, palette: ["a93f26","1fc1ff"]}, "Classification");

//Export image and accuracy. Uncomment this when ready to export data.
/*Export.image.toCloudStorage({
  image: classed_pl,
  description: currentDate + '_Classification',
  bucket: 'gee_export_kovi',
  fileNamePrefix: 'PL/' + currentDate + '_RandomForest30_3m_int8',
  scale: 3,
  crs: "EPSG:32616",
  region: champaign,
  maxPixels: 1e13
}); // 

var cm = ee.Feature(null, 
  {matrix: trainAcc.array(),
    overall_accuracy: trainAcc.accuracy(),
    consumer_accuracy: trainAcc.consumersAccuracy(),
    producer_accuracy: trainAcc.producersAccuracy(),
    kappa: trainAcc.kappa()});

Export.table.toCloudStorage({
  collection: ee.FeatureCollection(cm),
  description: currentDate + '_Classification_Accuracy',
  bucket: 'gee_export_kovi',
  fileNamePrefix: 'PL/Accuracy/' + currentDate + '_RandomForests30_Accuracy_',
  fileFormat: 'CSV'
}); // 

Export.table.toCloudStorage({
  collection: ee.FeatureCollection(trainers),
  description: currentDate + '_Trainers',
  bucket: 'gee_export_kovi',
  fileNamePrefix: 'PL/Geometry/' + currentDate + '_Trainers_Combined',
  fileFormat: 'SHP'
});
// */
