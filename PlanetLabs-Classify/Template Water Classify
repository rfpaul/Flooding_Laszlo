/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var vegetation = /* color: #35c61d */ee.FeatureCollection([]),
    mixed_soil_veg = /* color: #00ffff */ee.FeatureCollection([]),
    soil = /* color: #e18b1d */ee.FeatureCollection([]),
    water = /* color: #2b3fa7 */ee.FeatureCollection([]),
    champaign = ee.FeatureCollection("users/RobertFPaul/ChampaignCounty"),
    sinks = ee.Image("users/RobertFPaul/Champ_sinks_x10cm");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Robert F Paul
// Classification of cloud-free regions
// Template

// A mapping from a common name to the sensor-specific bands.
var LC8_BANDS = ['B2',   'B3',    'B4',  'B5',  'B6',    'B7',    'B10',   'B11'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'temp1', 'temp2'];

// Get the Landsat 8 TOA collection of the 2013 growing season
var lsat = ee.ImageCollection('LC8_L1T_TOA')
    .filterDate('2015-05-10', '2015-10-10')
    .filterBounds(champaign)
    .select(LC8_BANDS);

var CloudMask = function (image) {
  // Get the simple cloud scores of the image
  var cloud_mask = ee.Algorithms.Landsat.simpleCloudScore(image).select('cloud');
  // Mask from cloud scores less than or equal to 5
  cloud_mask = cloud_mask.lte(5);
  return image.updateMask(cloud_mask);
}

// Create a mask of all pixels matching CDL crop class indices
// for the specified years within the extent
var CDL_Mask = function(years, crops, extent) {
  var year;
  var crop;
  var temp_img;
  var year_img;
  var crop_img;
  // Result-holding raster filled with 0 values
  var result_img = ee.Image(0).clip(extent);
  
  // Go through each year to extract
  for (year in years) {
    // Crop-holding raster filled with 0 values
    crop_img = ee.Image(0).clip(extent);
    // Get CDL for current year and clip it
    year_img = ee.Image('USDA/NASS/CDL/' + years[year]);
    year_img = year_img.select('cropland').clip(extent);
    
    // Combine crops together
    for (crop in crops) {
      // Crop matches index
      temp_img = year_img.eq(crops[crop]);
      // Union with crop image
      crop_img = crop_img.or(temp_img);
    }
    // Union combined crop mask with previous mask results
    result_img = result_img.or(crop_img);
  }
  // Return resulting mask
  return result_img;
}

// Max values of cloudless pixels in the growing season
var cloud_masked = lsat.map(CloudMask).max();

// Load Cropland Data Layer of maize and soybeans plots from 2013-2016
// Change champaign to clip region
var cdl_cult = CDL_Mask([2013, 2014, 2015, 2016], [1, 5], champaign);
print(cdl_cult);

// Define visualization parameters for a false color image.
// NIR is green, SWIR1 is red, SWIR2 is blue
var vizParams = {'bands': ['B6', 'B5', 'B7'], 'max': .8, 'gamma': 1.6};

// Mask image
var masked_lsat = cloud_masked.updateMask(cdl_cult);
// Clip to region of interest
masked_lsat = masked_lsat.clip(champaign);

/*print(vegetation);

// Merge classifier points
var sites = vegetation.merge(water).merge(soil).merge(mixed_soil_veg);
//var sites = ee.FeatureCollection([vegetation, soil, mixed_soil_veg, water]).flatten();
// Sample pixels for classification
var training = masked_lsat.sampleRegions(sites, ["class"], 30);
// Train the classifier
var classifier = ee.Classifier.randomForest().train(training, "class", LC8_BANDS);
// Apply the classifier to the masked Landsat image
var classed_lsat = masked_lsat.classify(classifier);
// Remap values to prevent category 0 being lost to background after export
classed_lsat = classed_lsat.remap([0, 1, 2, 3], [1, 2, 3, 4]);
// Recast classified image as 8-bit depth integer
classed_lsat = classed_lsat.toInt8();

// Confusion matrix for classification
var trainAcc = classifier.confusionMatrix();
print('Confusion matrix: ', trainAcc);
print('Training overall accuracy: ', trainAcc.accuracy());
print('Consumers Accuracy', trainAcc.consumersAccuracy());
print('Producers Accuracy', trainAcc.producersAccuracy());
print('Kappa', trainAcc.kappa());

// Draw to map
//Map.setCenter(-94.866,42.967, 8);
//Map.setCenter(-96.37, 48.29, 8);*/
Map.addLayer(cdl_cult);
Map.addLayer(masked_lsat, vizParams, "Landsat Bands");
//Map.addLayer(classed_lsat, {min:1, max:4, palette:['green', 'yellow', 'red', 'blue']}, "Classification");

//Export image and mask. Uncomment this when ready to export data.
/*Export.image.toCloudStorage({
  image: classed_lsat,
  description: '2013_Classified_Corn_Belt',
  bucket: 'gee_export_kovi',
  fileNamePrefix: '2013/2013_cb_class_randomForest02_int8',
  scale: 30,
  region: champaign,
  maxPixels: 1e13
});*/