/**** Start of imports. If edited, may not auto-convert in the playground. ****/
var vegetation = /* color: #35c61d */ee.FeatureCollection([]),
    mixed_soil_veg = /* color: #00ffff */ee.FeatureCollection([]),
    soil = /* color: #e18b1d */ee.FeatureCollection(
        [ee.Feature(
            ee.Geometry.Point([-87.99070358276367, 40.17148262801404]),
            {
              "system:index": "0"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.9623794555664, 40.168203313557235]),
            {
              "system:index": "1"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.96134948730469, 40.169023157025336]),
            {
              "system:index": "2"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.98010349273682, 40.17299105945901]),
            {
              "system:index": "3"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.00229072570801, 40.16220175782997]),
            {
              "system:index": "4"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.96040534973145, 40.135992028738094]),
            {
              "system:index": "5"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.96255111694336, 40.1350405467472]),
            {
              "system:index": "6"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.95675754547119, 40.12280133214724]),
            {
              "system:index": "7"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.01117420196533, 40.115351723385444]),
            {
              "system:index": "8"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.94178009033203, 40.08984622390909]),
            {
              "system:index": "9"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.07910919189453, 40.039026526697306]),
            {
              "system:index": "10"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.22244644165039, 40.01738082539509]),
            {
              "system:index": "11"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.21858406066895, 40.067602661907486]),
            {
              "system:index": "12"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.05966854095459, 40.14275685587676]),
            {
              "system:index": "13"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.03065776824951, 40.17830309455446]),
            {
              "system:index": "14"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.0021619796753, 40.36912852402081]),
            {
              "system:index": "15"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.07267189025879, 40.36118276720154]),
            {
              "system:index": "16"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.07730674743652, 40.36278507339326]),
            {
              "system:index": "17"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.03958415985107, 40.325137169006986]),
            {
              "system:index": "18"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.09172630310059, 40.2140009811466]),
            {
              "system:index": "19"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.10781955718994, 40.147605597072015]),
            {
              "system:index": "20"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.08533191680908, 40.14399707374353]),
            {
              "system:index": "21"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.38320732116699, 40.029166111162866]),
            {
              "system:index": "22"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.3765983581543, 40.031334903639824]),
            {
              "system:index": "23"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.35960388183594, 40.121882481803205]),
            {
              "system:index": "24"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.41105937957764, 40.27679539706117]),
            {
              "system:index": "25"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.4344482421875, 40.279971239516584]),
            {
              "system:index": "26"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.42676639556885, 40.28674805395]),
            {
              "system:index": "27"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.38685512542725, 40.288057504985915]),
            {
              "system:index": "28"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.35119247436523, 40.33585503917398]),
            {
              "system:index": "29"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.35179328918457, 40.332256535514624]),
            {
              "system:index": "30"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.17618370056152, 40.3325836801406]),
            {
              "system:index": "31"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.05460453033447, 40.36746097370813]),
            {
              "system:index": "32"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.04125785827637, 40.36984784671219]),
            {
              "system:index": "33"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.07185649871826, 40.17292547618031]),
            {
              "system:index": "34"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.05872440338135, 40.16984299059086]),
            {
              "system:index": "35"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.43127250671387, 40.05894452339976]),
            {
              "system:index": "36"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.45783710479736, 40.05145507238968]),
            {
              "system:index": "37"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.04876804351807, 39.98874793308595]),
            {
              "system:index": "38"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.96413898468018, 40.013574602332035]),
            {
              "system:index": "39"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.17820072174072, 40.25871972186743]),
            {
              "system:index": "40"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.15094947814941, 40.264221525678884]),
            {
              "system:index": "41"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.15064907073975, 40.272407905408386]),
            {
              "system:index": "42"
            }),
        ee.Feature(
            ee.Geometry.Point([-87.99222707748413, 40.35306258707333]),
            {
              "system:index": "43"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.17081928253174, 40.22006349287355]),
            {
              "system:index": "44"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.26010465621948, 40.22506696059303]),
            {
              "system:index": "45"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.38784217834473, 40.36755906604508]),
            {
              "system:index": "46"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.41050148010254, 40.37216924484552]),
            {
              "system:index": "47"
            }),
        ee.Feature(
            ee.Geometry.Point([-88.39560985565186, 40.37543868405361]),
            {
              "system:index": "48"
            })]),
    water = /* color: #2b3fa7 */ee.FeatureCollection([]),
    champaign = ee.FeatureCollection("users/RobertFPaul/ChampaignCounty"),
    sinks = ee.Image("users/RobertFPaul/Champ_sinks_x10cm");
/***** End of imports. If edited, may not auto-convert in the playground. *****/
// Robert F Paul
// 2013 Classification of cloud-free regions
// Champaign County Only

// Add county shape
//Map.addLayer(champaign, {}, "Champaign County");

// A mapping from a common name to the sensor-specific bands.
var LC8_BANDS = ['B2',   'B3',    'B4',  'B5',  'B6',    'B7',    'B10',   'B11'];
var STD_NAMES = ['blue', 'green', 'red', 'nir', 'swir1', 'swir2', 'temp1', 'temp2'];

// Get the Landsat 8 TOA collection of the 2013 growing season
var lsat = ee.ImageCollection('LC8_L1T_TOA')
    .filterDate('2015-05-10', '2015-10-10')
    .filterBounds(champaign)
    .select(LC8_BANDS);

var CloudMask = function (image) {
  // Get the simple cloud scores of the image
  var cloud_mask = ee.Algorithms.Landsat.simpleCloudScore(image).select('cloud');
  // Mask from cloud scores less than or equal to 5
  cloud_mask = cloud_mask.lte(5);
  return image.updateMask(cloud_mask);
}

// Create a mask of all pixels matching CDL crop class indices
// for the specified years within the extent
var CDL_Mask = function(years, crops, extent) {
  var year;
  var crop;
  var temp_img;
  var year_img;
  var crop_img;
  // Result-holding raster filled with 1 values
  var result_img = ee.Image(1).clip(extent);
  
  // Go through each year to extract
  for (year in years) {
    // Crop-holding raster filled with 0 values
    crop_img = ee.Image(0).clip(extent);
    // Get CDL for current year and clip it
    year_img = ee.Image('USDA/NASS/CDL/' + years[year]);
    year_img = year_img.select('cropland').clip(extent);
    
    // Combine crops together
    for (crop in crops) {
      // Crop matches index
      temp_img = year_img.eq(crops[crop]);
      // Union with crop image
      crop_img = crop_img.or(temp_img);
    }
    // Intersect unified crop mask with previous mask results
    result_img = result_img.multiply(crop_img);
  }
  // Return resulting mask
  return result_img;
}

// Max values of cloudless pixels in the growing season
var cloud_masked = lsat.map(CloudMask).max();

// Load Cropland Data Layer of maize and soybeans plots from 2013-2016
var cdl_cult = CDL_Mask([2013, 2014, 2015, 2016], [1, 5], champaign);
print(cdl_cult);

// Define visualization parameters for a false color image.
// NIR is green, SWIR1 is red, SWIR2 is blue
var vizParams = {'bands': ['B6', 'B5', 'B7'], 'max': .8, 'gamma': 1.6};

// Mask image
var masked_lsat = cloud_masked.updateMask(cdl_cult);
// Clip to the Corn Belt only
masked_lsat = masked_lsat.clip(champaign);

/*print(vegetation);

// Merge classifier points
var sites = vegetation.merge(water).merge(soil).merge(mixed_soil_veg);
//var sites = ee.FeatureCollection([vegetation, soil, mixed_soil_veg, water]).flatten();
// Sample pixels for classification
var training = masked_lsat.sampleRegions(sites, ["class"], 30);
// Train the classifier
var classifier = ee.Classifier.randomForest().train(training, "class", LC8_BANDS);
// Apply the classifier to the masked Landsat image
var classed_lsat = masked_lsat.classify(classifier);
// Remap values to prevent category 0 being lost to background after export
classed_lsat = classed_lsat.remap([0, 1, 2, 3], [1, 2, 3, 4]);
// Recast classified image as 8-bit depth integer
classed_lsat = classed_lsat.toInt8();

// Confusion matrix for classification
var trainAcc = classifier.confusionMatrix();
print('Confusion matrix: ', trainAcc);
print('Training overall accuracy: ', trainAcc.accuracy());
print('Consumers Accuracy', trainAcc.consumersAccuracy());
print('Producers Accuracy', trainAcc.producersAccuracy());
print('Kappa', trainAcc.kappa());

// Draw to map
//Map.setCenter(-94.866,42.967, 8);
//Map.setCenter(-96.37, 48.29, 8);*/
Map.addLayer(masked_lsat, vizParams, "Landsat Bands");
// Add sinks
Map.addLayer(sinks, {min:0, max: 20, opacity: .50, palette:['white', 'blue', 'yellow', 'red']}, "Sinks");
//Map.addLayer(classed_lsat, {min:1, max:4, palette:['green', 'yellow', 'red', 'blue']}, "Classification");

//Export image and mask. Uncomment this when ready to export data.
/*Export.image.toCloudStorage({
  image: classed_lsat,
  description: '2013_Classified_Corn_Belt',
  bucket: 'gee_export_kovi',
  fileNamePrefix: '2013/2013_cb_class_randomForest02_int8',
  scale: 30,
  region: champaign,
  maxPixels: 1e13
});*/